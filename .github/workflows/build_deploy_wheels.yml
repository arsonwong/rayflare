name: Upload Python Package

on: push

jobs:
  deploy_wheels_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy wheels - Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Deploy wheels - Install dependencies
        run: |
          python -m pip install --upgrade setuptools wheel pip twine numpy

      - name: Deploy wheels - Build manylinux2014 binary wheels - py3.x - x86_64
        uses: RalfG/python-wheels-manylinux-build@v0.3.1-manylinux2014_x86_64
        with:
          python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310'
          build-requirements: 'numpy'

      - name: Deploy wheels - Build manylinux2014 binary wheels - py3.x - i686
        uses: RalfG/python-wheels-manylinux-build@v0.3.1-manylinux2014_i686
        with:
          python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310'
          build-requirements: 'numpy==1.21.4'

      - name: Publish wheels to PyPI
        if: startsWith(github.ref, 'refs/tags')
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine upload dist/*-manylinux*.whl --skip-existing

      - uses: actions/upload-artifact@v3
        with:
          name: linux_wheels
          path: dist/

  deploy_wheels_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    name: Building for windows ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade setuptools wheel pip twine numpy==1.21.4

      - name: Build Solcore Windows
        run: |
          python setup.py sdist bdist_wheel
        shell: powershell

      - name: Publish wheels to PyPI
        if: startsWith(github.ref, 'refs/tags')
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine upload dist/*-win_amd64*.whl --skip-existing

      - uses: actions/upload-artifact@v3
        with:
          name: windows_wheels
          path: dist/